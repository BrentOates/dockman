// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file docker/v1/docker.proto (package docker.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file docker/v1/docker.proto.
 */
export const file_docker_v1_docker: GenFile = /*@__PURE__*/
  fileDesc("ChZkb2NrZXIvdjEvZG9ja2VyLnByb3RvEglkb2NrZXIudjEiIgoLTG9nc1JlcXVlc3QSEwoLY29udGFpbmVySUQYASABKAkiKAoVQ29tcG9zZUFjdGlvblJlc3BvbnNlEg8KB21lc3NhZ2UYASABKAkiJQoSQ29udGFpbmVyTG9nU3RyZWFtEg8KB21lc3NhZ2UYASABKAwiZQoNU3RhdHNSZXNwb25zZRIlCgZzeXN0ZW0YASABKAsyFS5kb2NrZXIudjEuU3lzdGVtSW5mbxItCgpjb250YWluZXJzGAIgAygLMhkuZG9ja2VyLnYxLkNvbnRhaW5lclN0YXRzInwKDFN0YXRzUmVxdWVzdBIkCgRmaWxlGAEgASgLMhYuZG9ja2VyLnYxLkNvbXBvc2VGaWxlEiUKBnNvcnRCeRgCIAEoDjIVLmRvY2tlci52MS5TT1JUX0ZJRUxEEh8KBW9yZGVyGAMgASgOMhAuZG9ja2VyLnYxLk9SREVSIi0KClN5c3RlbUluZm8SCwoDQ1BVGAEgASgBEhIKCm1lbUluQnl0ZXMYAiABKAQiNgoMTGlzdFJlc3BvbnNlEiYKBGxpc3QYASADKAsyGC5kb2NrZXIudjEuQ29udGFpbmVyTGlzdCKOAQoNQ29udGFpbmVyTGlzdBIKCgJpZBgBIAEoCRIPCgdpbWFnZUlEGAIgASgJEhEKCWltYWdlTmFtZRgDIAEoCRIOCgZzdGF0dXMYBCABKAkSDAoEbmFtZRgFIAEoCRIPCgdjcmVhdGVkGAYgASgJEh4KBXBvcnRzGAcgAygLMg8uZG9ja2VyLnYxLlBvcnQiugEKDkNvbnRhaW5lclN0YXRzEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEQoJY3B1X3VzYWdlGAMgASgBEhQKDG1lbW9yeV91c2FnZRgEIAEoBBIUCgxtZW1vcnlfbGltaXQYBSABKAQSEgoKbmV0d29ya19yeBgGIAEoBBISCgpuZXR3b3JrX3R4GAcgASgEEhIKCmJsb2NrX3JlYWQYCCABKAQSEwoLYmxvY2tfd3JpdGUYCSABKAQiQwoEUG9ydBIOCgZwdWJsaWMYASABKAUSDwoHcHJpdmF0ZRgCIAEoBRIMCgRob3N0GAMgASgJEgwKBHR5cGUYBCABKAkiBwoFRW1wdHkiHwoLQ29tcG9zZUZpbGUSEAoIZmlsZW5hbWUYASABKAkqYAoKU09SVF9GSUVMRBIICgROQU1FEAASBwoDQ1BVEAESBwoDTUVNEAISDgoKTkVUV09SS19SWBADEg4KCk5FVFdPUktfVFgQBBIKCgZESVNLX1IQBRIKCgZESVNLX1cQBioZCgVPUkRFUhIHCgNEU0MQABIHCgNBU0MQATKxBAoNRG9ja2VyU2VydmljZRJFCgVTdGFydBIWLmRvY2tlci52MS5Db21wb3NlRmlsZRogLmRvY2tlci52MS5Db21wb3NlQWN0aW9uUmVzcG9uc2UiADABEkQKBFN0b3ASFi5kb2NrZXIudjEuQ29tcG9zZUZpbGUaIC5kb2NrZXIudjEuQ29tcG9zZUFjdGlvblJlc3BvbnNlIgAwARJGCgZSZW1vdmUSFi5kb2NrZXIudjEuQ29tcG9zZUZpbGUaIC5kb2NrZXIudjEuQ29tcG9zZUFjdGlvblJlc3BvbnNlIgAwARJHCgdSZXN0YXJ0EhYuZG9ja2VyLnYxLkNvbXBvc2VGaWxlGiAuZG9ja2VyLnYxLkNvbXBvc2VBY3Rpb25SZXNwb25zZSIAMAESRgoGVXBkYXRlEhYuZG9ja2VyLnYxLkNvbXBvc2VGaWxlGiAuZG9ja2VyLnYxLkNvbXBvc2VBY3Rpb25SZXNwb25zZSIAMAESOQoETGlzdBIWLmRvY2tlci52MS5Db21wb3NlRmlsZRoXLmRvY2tlci52MS5MaXN0UmVzcG9uc2UiABI8CgVTdGF0cxIXLmRvY2tlci52MS5TdGF0c1JlcXVlc3QaGC5kb2NrZXIudjEuU3RhdHNSZXNwb25zZSIAEkEKBExvZ3MSFi5kb2NrZXIudjEuTG9nc1JlcXVlc3QaHS5kb2NrZXIudjEuQ29udGFpbmVyTG9nU3RyZWFtIgAwAUKPAQoNY29tLmRvY2tlci52MUILRG9ja2VyUHJvdG9QAVosZ2l0aHViLmNvbS9SQTM0MS9kb2NrbWFuL2dlbmVyYXRlZC9kb2NrZXIvdjGiAgNEWFiqAglEb2NrZXIuVjHKAglEb2NrZXJcVjHiAhVEb2NrZXJcVjFcR1BCTWV0YWRhdGHqAgpEb2NrZXI6OlYxYgZwcm90bzM");

/**
 * @generated from message docker.v1.LogsRequest
 */
export type LogsRequest = Message<"docker.v1.LogsRequest"> & {
  /**
   * @generated from field: string containerID = 1;
   */
  containerID: string;
};

/**
 * Describes the message docker.v1.LogsRequest.
 * Use `create(LogsRequestSchema)` to create a new message.
 */
export const LogsRequestSchema: GenMessage<LogsRequest> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 0);

/**
 * @generated from message docker.v1.ComposeActionResponse
 */
export type ComposeActionResponse = Message<"docker.v1.ComposeActionResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message docker.v1.ComposeActionResponse.
 * Use `create(ComposeActionResponseSchema)` to create a new message.
 */
export const ComposeActionResponseSchema: GenMessage<ComposeActionResponse> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 1);

/**
 * @generated from message docker.v1.ContainerLogStream
 */
export type ContainerLogStream = Message<"docker.v1.ContainerLogStream"> & {
  /**
   * @generated from field: bytes message = 1;
   */
  message: Uint8Array;
};

/**
 * Describes the message docker.v1.ContainerLogStream.
 * Use `create(ContainerLogStreamSchema)` to create a new message.
 */
export const ContainerLogStreamSchema: GenMessage<ContainerLogStream> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 2);

/**
 * @generated from message docker.v1.StatsResponse
 */
export type StatsResponse = Message<"docker.v1.StatsResponse"> & {
  /**
   * @generated from field: docker.v1.SystemInfo system = 1;
   */
  system?: SystemInfo;

  /**
   * @generated from field: repeated docker.v1.ContainerStats containers = 2;
   */
  containers: ContainerStats[];
};

/**
 * Describes the message docker.v1.StatsResponse.
 * Use `create(StatsResponseSchema)` to create a new message.
 */
export const StatsResponseSchema: GenMessage<StatsResponse> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 3);

/**
 * @generated from message docker.v1.StatsRequest
 */
export type StatsRequest = Message<"docker.v1.StatsRequest"> & {
  /**
   * @generated from field: docker.v1.ComposeFile file = 1;
   */
  file?: ComposeFile;

  /**
   * @generated from field: docker.v1.SORT_FIELD sortBy = 2;
   */
  sortBy: SORT_FIELD;

  /**
   * @generated from field: docker.v1.ORDER order = 3;
   */
  order: ORDER;
};

/**
 * Describes the message docker.v1.StatsRequest.
 * Use `create(StatsRequestSchema)` to create a new message.
 */
export const StatsRequestSchema: GenMessage<StatsRequest> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 4);

/**
 * @generated from message docker.v1.SystemInfo
 */
export type SystemInfo = Message<"docker.v1.SystemInfo"> & {
  /**
   * represents float64
   *
   * @generated from field: double CPU = 1;
   */
  CPU: number;

  /**
   * @generated from field: uint64 memInBytes = 2;
   */
  memInBytes: bigint;
};

/**
 * Describes the message docker.v1.SystemInfo.
 * Use `create(SystemInfoSchema)` to create a new message.
 */
export const SystemInfoSchema: GenMessage<SystemInfo> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 5);

/**
 * @generated from message docker.v1.ListResponse
 */
export type ListResponse = Message<"docker.v1.ListResponse"> & {
  /**
   * @generated from field: repeated docker.v1.ContainerList list = 1;
   */
  list: ContainerList[];
};

/**
 * Describes the message docker.v1.ListResponse.
 * Use `create(ListResponseSchema)` to create a new message.
 */
export const ListResponseSchema: GenMessage<ListResponse> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 6);

/**
 * @generated from message docker.v1.ContainerList
 */
export type ContainerList = Message<"docker.v1.ContainerList"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string imageID = 2;
   */
  imageID: string;

  /**
   * @generated from field: string imageName = 3;
   */
  imageName: string;

  /**
   * @generated from field: string status = 4;
   */
  status: string;

  /**
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * @generated from field: string created = 6;
   */
  created: string;

  /**
   * @generated from field: repeated docker.v1.Port ports = 7;
   */
  ports: Port[];
};

/**
 * Describes the message docker.v1.ContainerList.
 * Use `create(ContainerListSchema)` to create a new message.
 */
export const ContainerListSchema: GenMessage<ContainerList> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 7);

/**
 * ContainerInfo holds metrics for a single Docker container.
 *
 * @generated from message docker.v1.ContainerStats
 */
export type ContainerStats = Message<"docker.v1.ContainerStats"> & {
  /**
   * Unique identifier of the container.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Name of the container.
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * CPU usage as a percentage.
   *
   * @generated from field: double cpu_usage = 3;
   */
  cpuUsage: number;

  /**
   * Current memory usage in bytes.
   *
   * @generated from field: uint64 memory_usage = 4;
   */
  memoryUsage: bigint;

  /**
   * Maximum memory limit in bytes.
   *
   * @generated from field: uint64 memory_limit = 5;
   */
  memoryLimit: bigint;

  /**
   * Total bytes received over the network.
   *
   * @generated from field: uint64 network_rx = 6;
   */
  networkRx: bigint;

  /**
   * Total bytes sent over the network.
   *
   * @generated from field: uint64 network_tx = 7;
   */
  networkTx: bigint;

  /**
   * Total bytes read from block devices.
   *
   * @generated from field: uint64 block_read = 8;
   */
  blockRead: bigint;

  /**
   * Total bytes written to block devices.
   *
   * @generated from field: uint64 block_write = 9;
   */
  blockWrite: bigint;
};

/**
 * Describes the message docker.v1.ContainerStats.
 * Use `create(ContainerStatsSchema)` to create a new message.
 */
export const ContainerStatsSchema: GenMessage<ContainerStats> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 8);

/**
 * @generated from message docker.v1.Port
 */
export type Port = Message<"docker.v1.Port"> & {
  /**
   * @generated from field: int32 public = 1;
   */
  public: number;

  /**
   * @generated from field: int32 private = 2;
   */
  private: number;

  /**
   * @generated from field: string host = 3;
   */
  host: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;
};

/**
 * Describes the message docker.v1.Port.
 * Use `create(PortSchema)` to create a new message.
 */
export const PortSchema: GenMessage<Port> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 9);

/**
 * @generated from message docker.v1.Empty
 */
export type Empty = Message<"docker.v1.Empty"> & {
};

/**
 * Describes the message docker.v1.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export const EmptySchema: GenMessage<Empty> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 10);

/**
 * @generated from message docker.v1.ComposeFile
 */
export type ComposeFile = Message<"docker.v1.ComposeFile"> & {
  /**
   * @generated from field: string filename = 1;
   */
  filename: string;
};

/**
 * Describes the message docker.v1.ComposeFile.
 * Use `create(ComposeFileSchema)` to create a new message.
 */
export const ComposeFileSchema: GenMessage<ComposeFile> = /*@__PURE__*/
  messageDesc(file_docker_v1_docker, 11);

/**
 * @generated from enum docker.v1.SORT_FIELD
 */
export enum SORT_FIELD {
  /**
   * @generated from enum value: NAME = 0;
   */
  NAME = 0,

  /**
   * @generated from enum value: CPU = 1;
   */
  CPU = 1,

  /**
   * @generated from enum value: MEM = 2;
   */
  MEM = 2,

  /**
   * @generated from enum value: NETWORK_RX = 3;
   */
  NETWORK_RX = 3,

  /**
   * @generated from enum value: NETWORK_TX = 4;
   */
  NETWORK_TX = 4,

  /**
   * @generated from enum value: DISK_R = 5;
   */
  DISK_R = 5,

  /**
   * @generated from enum value: DISK_W = 6;
   */
  DISK_W = 6,
}

/**
 * Describes the enum docker.v1.SORT_FIELD.
 */
export const SORT_FIELDSchema: GenEnum<SORT_FIELD> = /*@__PURE__*/
  enumDesc(file_docker_v1_docker, 0);

/**
 * @generated from enum docker.v1.ORDER
 */
export enum ORDER {
  /**
   * default val
   *
   * @generated from enum value: DSC = 0;
   */
  DSC = 0,

  /**
   * @generated from enum value: ASC = 1;
   */
  ASC = 1,
}

/**
 * Describes the enum docker.v1.ORDER.
 */
export const ORDERSchema: GenEnum<ORDER> = /*@__PURE__*/
  enumDesc(file_docker_v1_docker, 1);

/**
 * @generated from service docker.v1.DockerService
 */
export const DockerService: GenService<{
  /**
   * @generated from rpc docker.v1.DockerService.Start
   */
  start: {
    methodKind: "server_streaming";
    input: typeof ComposeFileSchema;
    output: typeof ComposeActionResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.Stop
   */
  stop: {
    methodKind: "server_streaming";
    input: typeof ComposeFileSchema;
    output: typeof ComposeActionResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.Remove
   */
  remove: {
    methodKind: "server_streaming";
    input: typeof ComposeFileSchema;
    output: typeof ComposeActionResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.Restart
   */
  restart: {
    methodKind: "server_streaming";
    input: typeof ComposeFileSchema;
    output: typeof ComposeActionResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.Update
   */
  update: {
    methodKind: "server_streaming";
    input: typeof ComposeFileSchema;
    output: typeof ComposeActionResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.List
   */
  list: {
    methodKind: "unary";
    input: typeof ComposeFileSchema;
    output: typeof ListResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.Stats
   */
  stats: {
    methodKind: "unary";
    input: typeof StatsRequestSchema;
    output: typeof StatsResponseSchema;
  },
  /**
   * @generated from rpc docker.v1.DockerService.Logs
   */
  logs: {
    methodKind: "server_streaming";
    input: typeof LogsRequestSchema;
    output: typeof ContainerLogStreamSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_docker_v1_docker, 0);

